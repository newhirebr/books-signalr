name: Flutter CI/CD

on:
  push:
    branches:
      - signal-r

jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.13.9' # use the version you need

    - name: Install dependencies
      run: flutter pub get

    - name: Install CocoaPods dependencies
      run: cd ios && pod install && cd ..

    - name: Build iOS
      run: flutter build ios --release --no-codesign

    - name: Install Apple certificate and provisioning profile
      env:
        APPLE_CERTIFICATE: "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"
        P12_PASSWORD: "745HXÂ£325FH!"
        PROVISIONING_PROFILE: ""
        KEYCHAIN_PASSWORD: "745HXÂ£325FH!"
      run: |
        # create variables
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

        # import certificate and provisioning profile from secrets
        echo -n "$APPLE_CERTIFICATE" | base64 --decode -o $CERTIFICATE_PATH
        echo -n "$PROVISIONING_PROFILE" | base64 --decode -o $PP_PATH

        # create temporary keychain
        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

        # import certificate to keychain
        security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH

        # apply provisioning profile
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

    - name: Deploy to TestFlight
      run: |
        # Build IPA
        xcodebuild clean -workspace "ios/Runner.xcworkspace" -scheme "Runner" -configuration Release
        xcodebuild archive -workspace "ios/Runner.xcworkspace" -scheme "Runner" -configuration Release -archivePath "build/ios/Runner.xcarchive"
        xcodebuild -exportArchive -archivePath "build/ios/Runner.xcarchive" -exportOptionsPlist "exportOptions.plist" -exportPath "build/ios/"

        # Upload to TestFlight
        altool --upload-app -f "build/ios/Runner.ipa" -t ios -u "mmk100@mail.aub.edu" -p "hveh-blaw-okdn-anbuc" --verbose
      env:
        ITC_USER: "mmk100@mail.aub.edu"
        ITC_APP_SPECIFIC_PASSWORD: "hveh-blaw-okdn-anbuc"
